const jobType = Object.freeze({
  PG_DARKPOOL_WITHDRAW: 'PG_DARKPOOL_WITHDRAW',
  PG_DARKPOOL_UNISWAP_SINGLESWAP: 'PG_DARKPOOL_UNISWAP_SINGLESWAP',
  PG_DARKPOOL_UNISWAP_LP: 'PG_DARKPOOL_UNISWAP_LP',
  PG_DARKPOOL_UNISWAP_FEE_COLLECTING: 'PG_DARKPOOL_UNISWAP_FEE_COLLECTING',
  PG_DARKPOOL_UNISWAP_REMOVE_LIQUIDITY: 'PG_DARKPOOL_UNISWAP_REMOVE_LIQUIDITY',
  PG_DARKPOOL_CURVE_MULTI_EXCHANGE: 'PG_DARKPOOL_CURVE_MULTI_EXCHANGE',
  PG_DARKPOOL_CURVE_ADD_LIQUIDITY: 'PG_DARKPOOL_CURVE_ADD_LIQUIDITY',
  PG_DARKPOOL_CURVE_REMOVE_LIQUIDITY: 'PG_DARKPOOL_CURVE_REMOVE_LIQUIDITY',
  PG_DARKPOOL_ZK_STAKE: 'PG_DARKPOOL_ZK_STAKE',
  PG_DARKPOOL_ZK_REDEEM: 'PG_DARKPOOL_ZK_REDEEM',
  PG_DARKPOOL_ROCKET_POOL_STAKE: 'PG_DARKPOOL_ROCKET_POOL_STAKE',
  PG_DARKPOOL_ROCKET_POOL_UNSTAKE: 'PG_DARKPOOL_ROCKET_POOL_UNSTAKE',
  PG_DARKPOOL_SABLIER_CLAIM: 'PG_DARKPOOL_SABLIER_CLAIM',
  PG_DARKPOOL_INFRA: 'PG_DARKPOOL_INFRA',
  PG_DARKPOOL_AERODROME_ADD_LIQUIDITY: 'PG_DARKPOOL_AERODROME_ADD_LIQUIDITY',
  PG_DARKPOOL_AERODROME_REMOVE_LIQUIDITY: 'PG_DARKPOOL_AERODROME_REMOVE_LIQUIDITY',
  PG_DARKPOOL_AERODROME_SWAP: 'PG_DARKPOOL_AERODROME_SWAP',
  PG_ZK_VERIFY_SUBMIT_PROOF: 'PG_ZK_VERIFY_SUBMIT_PROOF',
})

const POOL_TYPE = Object.freeze({
  META: 'META',
  FSN: 'FSN',
  NORMAL: 'NORMAL',
})

const status = Object.freeze({
  QUEUED: 'QUEUED',
  ACCEPTED: 'ACCEPTED',
  SENT: 'SENT',
  MINED: 'MINED',
  RESUBMITTED: 'RESUBMITTED',
  CONFIRMED: 'CONFIRMED',
  FAILED: 'FAILED',
})

const curvePoolType = Object.freeze({
  PLAIN: 'PLAIN',
  LENDING: 'LENDING',
  META: 'META',
  CRYPTO: 'CRYPTO',
})

const BASEPOOL_TYPE = Object.freeze({
  THREE_POOL: 1,
  FRAXUSDC: 2,
})

const ChainId = Object.freeze({
  HARDHAT: 31337,
  HARDHAT_ARBITRUM: 31338,
  HARDHAT_BASE: 31339,
  MAINNET: 1,
  GOERLI: 5,
  SEPOLIA: 11155111,
  ARBITRUM_ONE: 42161,
  OPTIMISM: 10,
  POLYGON: 137,
  CELO: 42220,
  BNB: 56,
  AVALANCHE: 43114,
  BASE: 8453,
  BounceBit: 6001,
  BounceBitTestnet: 6000,
  EMCTestnet : 99876,
})

module.exports = {
  jobType,
  status,
  curvePoolType,
  POOL_TYPE,
  BASEPOOL_TYPE,
  ChainId
}  